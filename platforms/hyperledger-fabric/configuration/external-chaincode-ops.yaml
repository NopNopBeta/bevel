# This playbook executes required tasks to install and instantiate external chaincode 
# on existing Kubernetes clusters. The Kubernetes clusters should already be created and the information 
# to connect to the clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
# For installing external chaincode:
#  ansible-playbook platforms/hyperledger-fabric/configuration/external-chaincode-ops.yaml -e "@build/network.yaml"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run using the same network.yaml
---
  # This will apply to ansible_provisioners. /etc/ansible/hosts should be configured with this group
- hosts: ansible_provisioners
  gather_facts: no
  tasks:
    # delete build directory
    - name: Remove build directory
      file:
        path: "./build"
        state: absent
        
    ############################################################################################
    # This task installs the external chaincode on the desired peers
    - name: Install external chaincode
      include_role:
        name: "create/chaincode/install_ext"
      vars:
        docker_url: "{{ network.docker.url }}"
        envspace: "{{ network.env.type }}"
        name: "{{ org.name | lower }}"
        namespace: "{{ org.name | lower }}-net"
        component_subject: "{{ org.subject }}"
        component_peers: "{{ org.services.peers }}"
        kubernetes: "{{ org.k8s }}"
        vault: "{{ org.vault }}"
        git_url: "{{ org.gitops.git_url }}"
        git_branch: "{{ org.gitops.branch }}"
        charts_dir: "{{ org.gitops.chart_source }}"
        values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ org.name | lower }}"
      loop: "{{ network['organizations'] }}"
      loop_control:
        loop_var: org
      when:
        - org.services.peers is defined

    ############################################################################################
    # This task completes the lifecyle of installed chaincode on the peers
    - name: "Complete chaincode lifecycle"
      include_role:
        name: "create/chaincode/lifecycle"
      vars:
        participants: "{{ item.participants }}"
        endorsers: "{{ item.endorsers }}"
        docker_url: "{{ network.docker.url }}"
      loop: "{{ network['channels'] }}"
      when: participants is defined and '2.' in network.version

  vars: #These variables can be overriden from the command line
    privilege_escalate: false           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"            #Default to /bin install directory for binaries
    add_new_org: 'false'                # Default to false as this is for main network creation
